<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LIUWEI CODE</title>
    <description>To be a stronger and better version of myself!</description>
    <link>http://liuwei.co/</link>
    <atom:link href="http://liuwei.co/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 03 Sep 2016 01:55:43 +0800</pubDate>
    <lastBuildDate>Sat, 03 Sep 2016 01:55:43 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>UIScrollView 教程（swift）</title>
        <description>&lt;p&gt;UIScrollView 在ios开发中是非常有用的控件之一。它是UITableView的基础，并且是展示内容大于屏幕的一种非常好的方式。在这篇UIScrollView教程中，你将学到这个控件的如下使用方法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如何使用一个UIScrollView展示一张大图。&lt;/li&gt;
  &lt;li&gt;当缩放UIScrollView的时候，如何保持UIScrollView的content居中。&lt;/li&gt;
  &lt;li&gt;如何嵌入复杂的视图到UIScrollView。&lt;/li&gt;
  &lt;li&gt;如何使用UIScrollView的可翻页特性，如何配合UIPageControl，进行滚动翻页显示。&lt;/li&gt;
  &lt;li&gt;如何显示当前页的时候能够看到上一页/下一页的内容。&lt;/li&gt;
  &lt;li&gt;还有更多！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这篇教程假定你熟悉swift和ios编程。如果你是一个新手，也许你希望从本网站了解一些&lt;a href=&quot;http://www.raywenderlich.com/?page_id=2519&quot;&gt;其他教程&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;同样，这篇教程也假定你知道怎么使用Interface Builder来添加新控件到一个View上，并在你的代码和Storybard之间进行连接。在继续之前你需要熟悉Storyboards，所以如果你对Storyboards或者Interface Builder不熟悉，你需要在本站看看这些&lt;a href=&quot;http://www.raywenderlich.com/?p=5138&quot;&gt;Storyboards教程&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;开始&lt;/h2&gt;

&lt;p&gt;打开Xcode创建一个新的项目，选择&lt;code class=&quot;highlighter-rouge&quot;&gt;File\New\Project…&lt;/code&gt;,然后选择&lt;code class=&quot;highlighter-rouge&quot;&gt;iOS\Application\Single View Application&lt;/code&gt;模板，在product name输入&lt;code class=&quot;highlighter-rouge&quot;&gt;ScrollViews&lt;/code&gt;，在language一栏选择Swift，然后在devices上选择&lt;code class=&quot;highlighter-rouge&quot;&gt;iPhone&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/../images/Create_Project-700x413.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击&lt;code class=&quot;highlighter-rouge&quot;&gt;Next&lt;/code&gt;,然后选择一个目录存放你的项目。&lt;/p&gt;

&lt;p&gt;然后，为这个项目&lt;a href=&quot;http://cdn1.raywenderlich.com/downloads/ScrollViewsResources.zip&quot;&gt;下载资源&lt;/a&gt;，然后拖动解压后的文件到项目根目录，确保&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Copy items if needed&quot;&lt;/code&gt;复选框是选中状态。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/../images/Copy_Resources-700x412.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;由于这篇教程打算阐明scroll view的四个用法，这个项目将用一个四个选项的tableview菜单，每一个选项将打开一个新的view controller来显示scroll view的某一用法。&lt;/p&gt;

&lt;p&gt;当你完成后，应该类似下面的样子：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/../images/Storyboard_Overall-655x500.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;构建tableview菜单，需要以下步骤：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;打开Main.storyboard，删除已经存在的view controller&lt;/li&gt;
  &lt;li&gt;这篇教程关闭了Auto Layout。从Utilities面板，选择File Inspector，然后取消Use Auto Layout复选框，在弹出框上，确保“Keep size class data for:”是选择了iPhone，然后选择Disable Size Classes按钮。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;../images/../images/Disable_Size_Classes.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;下一步，在storyboard上添加一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Table View Controller&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;现在，选中你添加的table，然后选择&lt;code class=&quot;highlighter-rouge&quot;&gt;Editor\Embed In\Navigation Controller&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;选中新的Navigation Controller，然后在Attributes inspector上选中&lt;code class=&quot;highlighter-rouge&quot;&gt;Is Initial View Controller&lt;/code&gt;复选框。&lt;/li&gt;
  &lt;li&gt;在table view controller上选择table view，然后在attributes inspector设置content type为静态单元格&lt;code class=&quot;highlighter-rouge&quot;&gt;Static Cells&lt;/code&gt;（如下图所示）。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;../images/../images/Static_Cells.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;在storyboard层级上，在文档大纲上点击Table View左边的箭头，然后选中&lt;code class=&quot;highlighter-rouge&quot;&gt;Table View Section&lt;/code&gt;。在inspector，设置行的数量为4.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;../images/../images/UIScrollView-table-view-section.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;table view的每一行，设置style为&lt;code class=&quot;highlighter-rouge&quot;&gt;Basic&lt;/code&gt;,然后编辑labels内容如下：
    &lt;ul&gt;
      &lt;li&gt;Image Scroll&lt;/li&gt;
      &lt;li&gt;Custom View Scroll&lt;/li&gt;
      &lt;li&gt;Paged&lt;/li&gt;
      &lt;li&gt;Paged with Peeking&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;

  &lt;p&gt;备注：当你设置每个table row的style为“Basic”，table row将得到一个额外的子控件 － label，你需要再次展开它来编辑他们。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;保存storyboard，然后编译运行。你会看到你的table view，类似下面的图片，遗憾的事，此时此刻tableview还没有任何东西，但是你可以修复它！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/../images/Scroll_View_Run_11-281x500.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;滚动和缩放一张大图&lt;/h2&gt;

&lt;p&gt;你需要学习的第一件事是如何设置一个scroll view，允许用户缩放和平移。&lt;/p&gt;

&lt;p&gt;首先，你需要一个建立一个view controller。打开&lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController.swift&lt;/code&gt;， 然后在顶部定义类的地方，让他实现&lt;code class=&quot;highlighter-rouge&quot;&gt;UIScrollViewDelegate&lt;/code&gt;协议。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class ViewController: UIViewController, UIScrollViewDelegate {
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在类定义的内部，添加下面的outlet属性：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@IBOutlet var scrollView: UIScrollView!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;下一步你需要连接这个属性到真实的scroll view。&lt;/p&gt;

&lt;p&gt;打开storyboard，并且从对象库中拖动一个&lt;code class=&quot;highlighter-rouge&quot;&gt;View Controller&lt;/code&gt;到画布，选中这个新的view controller，并且在Identity Inspector上设置class为&lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/View_controller_class-_type.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个view controller将显示一个图片事例。从table view的&lt;code class=&quot;highlighter-rouge&quot;&gt;Image Scroll&lt;/code&gt;行上按住control键单击，然后拖动到新的view controller。在弹出的菜单上,选择&lt;code class=&quot;highlighter-rouge&quot;&gt;Selection Segue&lt;/code&gt;下的&lt;code class=&quot;highlighter-rouge&quot;&gt;Push&lt;/code&gt;选项。这样，当用户选择第一行，view controller被推到了navigation的栈上。&lt;/p&gt;

&lt;p&gt;从对象库里拖动一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Scroll View&lt;/code&gt;填充到view controller上。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/Add_Scroll_View-293x500.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;把scroll view连接到view controller，并且把scroll view的代理（delegate）设置为view controller。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/Scroll_View_Outlets.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;现在，你需要坐下来并且编写你的代码，打开&lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController.swift&lt;/code&gt;,并且添加一个新的属性：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var imageView: UIImageView!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这将在用户四处滚动的时候持有image view。&lt;/p&gt;

&lt;p&gt;现在，是时候设置scroll view最有趣的部分了。用以下代码替换&lt;code class=&quot;highlighter-rouge&quot;&gt;viewDidLoad&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;override func viewDidLoad() {
  super.viewDidLoad()
 
  // 1
  let image = UIImage(named: &quot;photo1.png&quot;)!
  imageView = UIImageView(image: image)
  imageView.frame = CGRect(origin: CGPoint(x: 0, y: 0), size:image.size)
  scrollView.addSubview(imageView)
 
  // 2
  scrollView.contentSize = image.size
 
  // 3
  var doubleTapRecognizer = UITapGestureRecognizer(target: self, action: &quot;scrollViewDoubleTapped:&quot;)
  doubleTapRecognizer.numberOfTapsRequired = 2
  doubleTapRecognizer.numberOfTouchesRequired = 1
  scrollView.addGestureRecognizer(doubleTapRecognizer)
 
  // 4
  let scrollViewFrame = scrollView.frame
  let scaleWidth = scrollViewFrame.size.width / scrollView.contentSize.width
  let scaleHeight = scrollViewFrame.size.height / scrollView.contentSize.height
  let minScale = min(scaleWidth, scaleHeight);
  scrollView.minimumZoomScale = minScale;
 
  // 5
  scrollView.maximumZoomScale = 1.0
  scrollView.zoomScale = minScale;
 
  // 6
  centerScrollViewContents()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这似乎看起来有些复杂，所以让我们一步一步分解它。你会觉得它并没有那么糟糕。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;首先，你需要用你之前添加到项目的&lt;code class=&quot;highlighter-rouge&quot;&gt;photo1.png&lt;/code&gt;图片创建一个image view，这里强制解包表示如果它找不到photo1.png图片则会崩溃。这会早点提醒你不要忘记添加那个文件到项目中。下一步，你设置image view的frame（它的大小和位置），让他位于父视图的(0,0)坐标点和它的尺寸，最后，添加image view作为scroll view的子视图。&lt;/li&gt;
  &lt;li&gt;你需要告诉scroll view的contentsize，让它知道可以横向纵向可以滚动多远，在当前这个例子，它的contentsize是图片的size。&lt;/li&gt;
  &lt;li&gt;这里设置双击放大手势，你不需要&lt;code class=&quot;highlighter-rouge&quot;&gt;UIPinchGestureRecognizer&lt;/code&gt;来放大，因为UIScrollView已经内置有一个了！&lt;/li&gt;
  &lt;li&gt;下一步，你需要为scroll view计算出最小缩放，一个zoom scale表示content被正常显示的大小，小于1的zoom scale显示缩小内容，大于1的zoom scale显示放大的内容。获取最小的zoom scale，你基于它的宽度计算需要缩小多少让图片正好适配scroll view的边界。然后你需要针对图片的高度作出同样的计算，那两个最小的计算结果是scroll view的最小缩放。当完全缩小你可以看见全部的图片。&lt;/li&gt;
  &lt;li&gt;你设置最大缩放为1，因为放到比图片的分辨率还大会引起图片模糊，你设置初始缩放为最小，让图片已开始完全缩小。&lt;/li&gt;
  &lt;li&gt;调用一个帮助方法让图片在scroll view居中，帮助方法在哪里，下面就来讲。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;添加&lt;code class=&quot;highlighter-rouge&quot;&gt;centerScrollViewContents&lt;/code&gt;的实现到类中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func centerScrollViewContents() {
  let boundsSize = scrollView.bounds.size
  var contentsFrame = imageView.frame
 
  if contentsFrame.size.width &amp;lt; boundsSize.width {
    contentsFrame.origin.x = (boundsSize.width - contentsFrame.size.width) / 2.0
  } else {
    contentsFrame.origin.x = 0.0
  }
 
  if contentsFrame.size.height &amp;lt; boundsSize.height {
    contentsFrame.origin.y = (boundsSize.height - contentsFrame.size.height) / 2.0
  } else {
    contentsFrame.origin.y = 0.0
  }
 
  imageView.frame = contentsFrame
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个方法的关键是解决一个小问题：如果scroll view的contentsize比它的边界小，然后它位于左上角，而不是在中心，如果你允许用户完全缩小，如果图片在视图中心将是极好的。这个方法实现了让图片始终在scroll view边界的中心。&lt;/p&gt;

&lt;p&gt;最后，添加&lt;code class=&quot;highlighter-rouge&quot;&gt;scrollViewDoubleTapped&lt;/code&gt;的实现到类中，实现双击手势。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func scrollViewDoubleTapped(recognizer: UITapGestureRecognizer) {
  // 1        
  let pointInView = recognizer.locationInView(imageView)
 
  // 2
  var newZoomScale = scrollView.zoomScale * 1.5
  newZoomScale = min(newZoomScale, scrollView.maximumZoomScale)
 
  // 3
  let scrollViewSize = scrollView.bounds.size
  let w = scrollViewSize.width / newZoomScale
  let h = scrollViewSize.height / newZoomScale
  let x = pointInView.x - (w / 2.0)
  let y = pointInView.y - (h / 2.0)
 
  let rectToZoomTo = CGRectMake(x, y, w, h);
 
  // 4
  scrollView.zoomToRect(rectToZoomTo, animated: true)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当双击的时候这个方法被调用，下面一步一步指导发生了什么：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;首先，你需要知道在图片控件的哪里被点击了，你需要直接在那个点上放大，这或许是作为一个用户所期望的。&lt;/li&gt;
  &lt;li&gt;下一步，你计算一个zoom scale让它放大150%，但是超过了你在&lt;code class=&quot;highlighter-rouge&quot;&gt;viewDidLoad&lt;/code&gt;里面定义的最大缩放。&lt;/li&gt;
  &lt;li&gt;然后使用第一步的位置来计算一个用来放大的&lt;code class=&quot;highlighter-rouge&quot;&gt;CGRect&lt;/code&gt;矩形。&lt;/li&gt;
  &lt;li&gt;最后，你需要告诉scroll view放大，并且这里你需要让他看起来有一个不错的动画。&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;关于ios不同手势的更多信息，查看&lt;a href=&quot;http://www.raywenderlich.com/?p=76020&quot;&gt;UIGestureRecognizer tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;现在，还记住你是如何设置&lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController&lt;/code&gt;作为&lt;code class=&quot;highlighter-rouge&quot;&gt;UIScrollViewDelegate&lt;/code&gt;的吗？是的，现在你需要实现那个协议里面的一些方法。添加下面的方法到类中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func viewForZoomingInScrollView(scrollView: UIScrollView!) -&amp;gt; UIView! {
  return imageView
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这是scroll view缩放机制的核心，它告诉scroll view当捏放的时候哪个视图需要变的更大或者更小。所以告诉它是&lt;code class=&quot;highlighter-rouge&quot;&gt;imageView&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;最后，添加下面的代理方法到类中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func scrollViewDidZoom(scrollView: UIScrollView!) {
  centerScrollViewContents()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当用户完成缩放scroll view将调用这个方法，这里，你需要view重新放到中心，scroll view不会自然的出现放大，取而代之的是，它会排在左上角。&lt;/p&gt;

&lt;p&gt;现在，深呼吸，给你自己拍拍后背，编译并且运行你的项目！如果一切顺利，在&lt;code class=&quot;highlighter-rouge&quot;&gt;scroll view&lt;/code&gt;上单击。你最终会有一个完美的可以缩放，移动和单击的图片，太棒了！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/Scroll_View_Run_2-281x500.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;滚动和缩放一个有层级的视图&lt;/h2&gt;

&lt;p&gt;如果你希望在你的scroll view里面放多个视图，而不仅仅是一张图片，如果你有一个复杂的层级视图需要可以被缩放和移动，当然，scroll view可以做到这些！更重要的是，它在你已经完成的基础上仅仅需要一小步。&lt;/p&gt;

&lt;p&gt;创建一个新文件，选择&lt;code class=&quot;highlighter-rouge&quot;&gt; iOS\Source\Cocoa Touch Class &lt;/code&gt;模板。设置class名为&lt;code class=&quot;highlighter-rouge&quot;&gt;CustomScrollViewController&lt;/code&gt;，然后设置为&lt;code class=&quot;highlighter-rouge&quot;&gt;UIViewController&lt;/code&gt;的子类，确保“Also create XIB file” 复选框没有选中，设置语言为&lt;code class=&quot;highlighter-rouge&quot;&gt;swift&lt;/code&gt;.点击&lt;code class=&quot;highlighter-rouge&quot;&gt;Next&lt;/code&gt;然后保存到项目里。&lt;/p&gt;

&lt;p&gt;打开&lt;code class=&quot;highlighter-rouge&quot;&gt;CustomScrollViewController.swift&lt;/code&gt;,然后用下面的内容替换：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import UIKit
 
class CustomScrollViewController: UIViewController, UIScrollViewDelegate {
  @IBOutlet var scrollView: UIScrollView!
 
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;下一步，打开&lt;code class=&quot;highlighter-rouge&quot;&gt;Main.storyboard&lt;/code&gt;,像刚刚一样添加&lt;code class=&quot;highlighter-rouge&quot;&gt;View Controller&lt;/code&gt;并从table view的第二行连线。设置view controller的class为你刚刚创建的&lt;code class=&quot;highlighter-rouge&quot;&gt;CustomScrollViewController&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;添加一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Scroll View&lt;/code&gt;并且连接它到outlet，并且像刚刚一样设置view controller作为它的代理。&lt;/p&gt;

&lt;p&gt;然后，打开&lt;code class=&quot;highlighter-rouge&quot;&gt;CustomScrollViewController.swift&lt;/code&gt;并且在scrollView outlet下面的添加属性：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var containerView: UIView!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;与之前不同的是containerView替代了&lt;code class=&quot;highlighter-rouge&quot;&gt;UIImageView&lt;/code&gt;,它是怎样工作的应该是一个小小的提示。&lt;/p&gt;

&lt;p&gt;现在，像这样实现&lt;code class=&quot;highlighter-rouge&quot;&gt;viewDidLoad&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;override func viewDidLoad() {
  super.viewDidLoad()
 
  // Set up the container view to hold your custom view hierarchy
  let containerSize = CGSize(width: 640.0, height: 640.0)
  containerView = UIView(frame: CGRect(origin: CGPoint(x: 0, y: 0), size:containerSize))
  scrollView.addSubview(containerView)
 
  // Set up your custom view hierarchy
  let redView = UIView(frame: CGRect(x: 0, y: 0, width: 640, height: 80))
  redView.backgroundColor = UIColor.redColor();
  containerView.addSubview(redView)
 
  let blueView = UIView(frame: CGRect(x: 0, y: 560, width: 640, height: 80))
  blueView.backgroundColor = UIColor.blueColor();
  containerView.addSubview(blueView)
 
  let greenView = UIView(frame: CGRect(x: 160, y: 160, width: 320, height: 320))
  greenView.backgroundColor = UIColor.greenColor();
  containerView.addSubview(greenView)
 
  let imageView = UIImageView(image: UIImage(named: &quot;slow.png&quot;))
  imageView.center = CGPoint(x: 320, y: 320);
  containerView.addSubview(imageView)
 
  // Tell the scroll view the size of the contents
  scrollView.contentSize = containerSize;
 
  // Set up the minimum &amp;amp; maximum zoom scales
  let scrollViewFrame = scrollView.frame
  let scaleWidth = scrollViewFrame.size.width / scrollView.contentSize.width
  let scaleHeight = scrollViewFrame.size.height / scrollView.contentSize.height
  let minScale = min(scaleWidth, scaleHeight)
 
  scrollView.minimumZoomScale = minScale
  scrollView.maximumZoomScale = 1.0
  scrollView.zoomScale = 1.0
 
  centerScrollViewContents()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;viewDidLoad&lt;/code&gt;设置一个视图作为视图层级的根视图。这就是之前设置的实力变量&lt;code class=&quot;highlighter-rouge&quot;&gt;containerView&lt;/code&gt;。然后添加这个根视图到scroll view。这是关键，如果你打算让view被放大，只能有一个view可以被添加到scroll view。因为正如你将回调的，你在代理的回调方法&lt;code class=&quot;highlighter-rouge&quot;&gt;viewForZoomingInScrollView&lt;/code&gt;只能返回一个视图。你设置&lt;code class=&quot;highlighter-rouge&quot;&gt;zoomScale&lt;/code&gt;为1代替&lt;code class=&quot;highlighter-rouge&quot;&gt;minScale&lt;/code&gt;,使contentview正常大小，代替屏幕大小。&lt;/p&gt;

&lt;p&gt;同样的，实现&lt;code class=&quot;highlighter-rouge&quot;&gt;centerScrollViewContents&lt;/code&gt;和两个&lt;code class=&quot;highlighter-rouge&quot;&gt;UIScrollViewDelegate&lt;/code&gt;的代理方法。对于原先的版本，用&lt;code class=&quot;highlighter-rouge&quot;&gt;containerView&lt;/code&gt;取代&lt;code class=&quot;highlighter-rouge&quot;&gt;imageView&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func centerScrollViewContents() {
  let boundsSize = scrollView.bounds.size
  var contentsFrame = containerView.frame
 
  if contentsFrame.size.width &amp;lt; boundsSize.width {
    contentsFrame.origin.x = (boundsSize.width - contentsFrame.size.width) / 2.0
  } else {
    contentsFrame.origin.x = 0.0
  }
 
  if contentsFrame.size.height &amp;lt; boundsSize.height {
    contentsFrame.origin.y = (boundsSize.height - contentsFrame.size.height) / 2.0
  } else {
    contentsFrame.origin.y = 0.0
  }
 
  containerView.frame = contentsFrame
}
 
func viewForZoomingInScrollView(scrollView: UIScrollView!) -&amp;gt; UIView! {
  return containerView
}
 
func scrollViewDidZoom(scrollView: UIScrollView!) {
  centerScrollViewContents()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;备注：你可能留意到了&lt;code class=&quot;highlighter-rouge&quot;&gt;UITapGestureRecognizer&lt;/code&gt;的不足。这是让这部分教程更简单。随意添加进去作为额外的练习。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;现在编译并且运行你的项目，这次，点击&lt;code class=&quot;highlighter-rouge&quot;&gt;Custom View Scroll&lt;/code&gt;,然后平移和缩放，是不是很棒？&lt;/p&gt;

&lt;h2 id=&quot;uiscrollview&quot;&gt;可翻页的UIScrollView&lt;/h2&gt;

&lt;p&gt;原文：&lt;a href=&quot;http://www.raywenderlich.com/76436/use-uiscrollview-scroll-zoom-content-swift&quot;&gt;UIScrollView Tutorial: Getting Started&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://liuwei.co/2015/UIScrollView-%E6%95%99%E7%A8%8B-swift</link>
        <guid isPermaLink="true">http://liuwei.co/2015/UIScrollView-%E6%95%99%E7%A8%8B-swift</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>提高IOS开发效率的一些小技巧</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;一，快捷键&lt;/h2&gt;

&lt;h3 id=&quot;section-1&quot;&gt;1.添加删除当前行快捷键&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /Applications/Xcode.app/Contents/Frameworks/IDEKit.framework/Resources/IDETextKeyBindingSet.plist
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;找到Deletion节点，添加以下代码:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;key&amp;gt;Delete Current Line&amp;lt;/key&amp;gt; 
&amp;lt;string&amp;gt;deleteToBeginningOfLine:, moveToEndOfLine:, deleteToBeginningOfLine:, deleteBackward:, moveDown:, moveToBeginningOfLine:&amp;lt;/string&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;依次点击 &lt;code class=&quot;highlighter-rouge&quot;&gt;xcode -&amp;gt; Preferences -&amp;gt; Key Bindings&lt;/code&gt; 在输入框中输入delete current line , 在右边的Key一栏中绑定快捷键，这里我喜欢Eclipse的风格&lt;code class=&quot;highlighter-rouge&quot;&gt;command + d&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/xcode-command+d.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;2.修改默认快捷键&lt;/h3&gt;

&lt;p&gt;平时在开发过程中，我用到最多的快捷键是布局界面的切换和查找，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/xcode-shortcut-key.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;code-snippets&quot;&gt;二，Code Snippets&lt;/h2&gt;

&lt;p&gt;把一些常用的代码块作为自定义code snippets，这个因人而异。我这里定义了一些常用的注释，GCD，ifelse，switch等。
这里推荐一个插件，&lt;a href=&quot;https://github.com/acoomans/ACCodeSnippetRepositoryPlugin&quot;&gt;ACCodeSnippetRepository&lt;/a&gt; &lt;br /&gt;
这个是我的snippets repository：https://github.com/liuweicode/snippets&lt;/p&gt;

&lt;h2 id=&quot;xcode&quot;&gt;三，xcode插件&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/supermarin/Alcatraz&quot;&gt;Alcatraz&lt;/a&gt;：Package manager for Xcode&lt;/p&gt;

</description>
        <pubDate>Mon, 17 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://liuwei.co/2015/%E6%8F%90%E9%AB%98IOS%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7</link>
        <guid isPermaLink="true">http://liuwei.co/2015/%E6%8F%90%E9%AB%98IOS%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7</guid>
        
        
        <category>Blog</category>
        
      </item>
    
      <item>
        <title>搭建个人知识管理平台</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;环境&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ECS 1核/1G/CentOS6.5 x64&lt;/li&gt;
  &lt;li&gt;Nginx 1.0.15&lt;/li&gt;
  &lt;li&gt;Nodejs v0.12.7&lt;/li&gt;
  &lt;li&gt;Forever v0.15.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;安装&lt;/h2&gt;

&lt;p&gt;前期服务器搭建，反向代理设置等已经做好，下面只记录一下Raneto的安装过程。主要是针对自己的喜好，做了一些修改。&lt;/p&gt;

&lt;h3 id=&quot;ranetohttpsgithubcomgilbitronranetoreleases&quot;&gt;1.下载 &lt;a href=&quot;https://github.com/gilbitron/Raneto/releases&quot;&gt;Raneto&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;目前最新版本v0.6.0，下载并解压到网站根目录：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://github.com/gilbitron/Raneto/archive/0.6.0.tar.gz
tar -zxvf 0.6.0.tar.gz -C /home/wwwroot/
cd /home/wwwroot/
mv Raneto-0.6.0 liuwei.co
chown www.www liuwei.co -R
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-2&quot;&gt;2.修改首页列表宽度全屏&lt;/h3&gt;

&lt;p&gt;将首页列表宽度改成100%&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /home/wwwroot/liuwei.co
vim public/styles/raneto.css
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;将下面的代码添加到最后:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/*将首页列表宽度改成100%*/
.col-sm-4 {
  width: 100%;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;3.添加中文搜索支持&lt;/h3&gt;

&lt;p&gt;感谢&lt;a href=&quot;https://github.com/nandy007/lunr.js&quot;&gt;nandy007&lt;/a&gt;为lunr.js添加了中文搜索的支持，修改package.json：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim package.json
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;找到&lt;code class=&quot;highlighter-rouge&quot;&gt;dependencies&lt;/code&gt;节点下面的&lt;code class=&quot;highlighter-rouge&quot;&gt;lunr&lt;/code&gt;模块，如下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;dependencies&quot;: {
    &quot;body-parser&quot;: &quot;~1.0.0&quot;,
    &quot;cookie-parser&quot;: &quot;~1.0.1&quot;,
    &quot;debug&quot;: &quot;~0.7.4&quot;,
    &quot;express&quot;: &quot;~4.2.0&quot;,
    &quot;extend&quot;: &quot;^1.2.1&quot;,
    &quot;glob&quot;: &quot;^4.0.0&quot;,
    &quot;hogan-express&quot;: &quot;^0.5.2&quot;,
    &quot;lunr&quot;: &quot;^0.5.3&quot;,
    &quot;marked&quot;: &quot;^0.3.2&quot;,
    &quot;moment&quot;: &quot;^2.6.0&quot;,
    &quot;morgan&quot;: &quot;~1.0.0&quot;,
    &quot;raneto-core&quot;: &quot;0.x&quot;,
    &quot;static-favicon&quot;: &quot;~1.0.0&quot;,
    &quot;underscore&quot;: &quot;^1.6.0&quot;,
    &quot;underscore.string&quot;: &quot;^2.3.3&quot;,
    &quot;validator&quot;: &quot;^3.13.0&quot;
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;替换成下面的代码:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;dependencies&quot;: {
    &quot;body-parser&quot;: &quot;~1.0.0&quot;,
    &quot;cookie-parser&quot;: &quot;~1.0.1&quot;,
    &quot;debug&quot;: &quot;~0.7.4&quot;,
    &quot;express&quot;: &quot;~4.2.0&quot;,
    &quot;extend&quot;: &quot;^1.2.1&quot;,
    &quot;glob&quot;: &quot;^4.0.0&quot;,
    &quot;hogan-express&quot;: &quot;^0.5.2&quot;,
    &quot;lunr&quot;: &quot;https://github.com/liuweicode/lunr.js&quot;,
    &quot;marked&quot;: &quot;^0.3.2&quot;,
    &quot;moment&quot;: &quot;^2.6.0&quot;,
    &quot;morgan&quot;: &quot;~1.0.0&quot;,
    &quot;raneto-core&quot;: &quot;0.x&quot;,
    &quot;static-favicon&quot;: &quot;~1.0.0&quot;,
    &quot;underscore&quot;: &quot;^1.6.0&quot;,
    &quot;underscore.string&quot;: &quot;^2.3.3&quot;,
    &quot;validator&quot;: &quot;^3.13.0&quot;
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;forever&quot;&gt;4.安装依赖并forever启动&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install
forever stop bin/www
forever start -e error.log bin/www  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;5.打开浏览器访问&lt;/h3&gt;
&lt;p&gt;完毕&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;============2015年8月17日 修改================&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim views/home.html
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;找到&lt;code class=&quot;highlighter-rouge&quot;&gt;Main Articles&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;修改如下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;panel panel-default &quot;&amp;gt;
  &amp;lt;!-- &amp;lt;h2 class=&quot;panel-heading&quot;&amp;gt;Main Articles&amp;lt;/h2&amp;gt; --&amp;gt;
	   &amp;lt;h2 class=&quot;panel-heading&quot;&amp;gt;To be a stronger and better version of myself!&amp;lt;/h2&amp;gt;
		&amp;lt;ul class=&quot;list-group pages&quot;&amp;gt;
			
				&amp;lt;li class=&quot;list-group-item page&quot;&amp;gt;&amp;lt;a href=&quot;/&quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
			
		&amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;todo&quot;&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;首页添加日期显示&lt;/li&gt;
  &lt;li&gt;首页添加翻页功能&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 16 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://liuwei.co/2015/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0</link>
        <guid isPermaLink="true">http://liuwei.co/2015/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0</guid>
        
        
        <category>Blog</category>
        
      </item>
    
      <item>
        <title>Lorem ipsum dolor sit amet..</title>
        <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
</description>
        <pubDate>Fri, 17 Jul 2015 20:36:09 +0800</pubDate>
        <link>http://liuwei.co/2015/lorem-ipsum</link>
        <guid isPermaLink="true">http://liuwei.co/2015/lorem-ipsum</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>More random text</title>
        <description>&lt;p&gt;OK, so images can get quite complicated as we have a few variables to work with! For example the image below has had a caption entered in the WordPress image upload dialog box, this creates a [caption] shortcode which then in turn wraps the whole thing in a &lt;code&gt;div&lt;/code&gt; with inline styling! Maybe one day they'll be able to use the &lt;code&gt;figure&lt;/code&gt; and &lt;code&gt;figcaption&lt;/code&gt; elements for all this. Additionally, images can be wrapped in links which, if you're using anything other than &lt;code&gt;color&lt;/code&gt; or &lt;code&gt;text-decoration&lt;/code&gt; to style your links can be problematic.&lt;/p&gt;
&lt;div id=&quot;attachment_28&quot; class=&quot;wp-caption alignnone&quot; style=&quot;width: 510px&quot;&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_large.png&quot; alt=&quot;Your Alt Tag&quot; title=&quot;bmxisbest&quot; width=&quot;500&quot; height=&quot;300&quot; class=&quot;size-large wp-image-28&quot; /&gt;&lt;/a&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;This is the optional caption.&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;The next issue we face is image alignment, users get the option of &lt;em&gt;None&lt;/em&gt;, &lt;em&gt;Left&lt;/em&gt;, &lt;em&gt;Right&lt;/em&gt; &amp;amp; &lt;em&gt;Center&lt;/em&gt;. On top of this, they also get the options of &lt;em&gt;Thumbnail&lt;/em&gt;, &lt;em&gt;Medium&lt;/em&gt;, &lt;em&gt;Large&lt;/em&gt; &amp;amp; &lt;em&gt;Fullsize&lt;/em&gt;. You'll probably want to add floats to style the image position so important to remember to clear these to stop images popping below the bottom of your articles.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_medium.png&quot; alt=&quot;Your Alt Title&quot; title=&quot;Your Title&quot; width=&quot;300&quot; height=&quot;200&quot; class=&quot;alignright size-medium wp-image-28&quot; /&gt;
&lt;img src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_thumb.png&quot; alt=&quot;Your Alt Title&quot; title=&quot;Your Title&quot; width=&quot;150&quot; height=&quot;150&quot; class=&quot;alignleft size-thumbnail wp-image-28&quot; /&gt;
&lt;img class=&quot;aligncenter size-medium wp-image-28&quot; title=&quot;Your Title&quot; src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_medium.png&quot; alt=&quot;Your Alt Title&quot; width=&quot;300&quot; height=&quot;200&quot; /&gt;
&lt;img src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_full.png&quot; alt=&quot;Your Alt Title&quot; title=&quot;Your Title&quot; width=&quot;840&quot; height=&quot;300&quot; class=&quot;alignnone size-full wp-image-28&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Additionally, to add further confusion, images can be wrapped inside paragraph content, lets test some examples here.&lt;img src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_medium.png&quot; alt=&quot;Your Alt Title&quot; title=&quot;Your Title&quot; width=&quot;300&quot; height=&quot;200&quot; class=&quot;alignright size-medium wp-image-28&quot; /&gt;
Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Maecenas sed diam eget risus varius blandit sit amet non magna. Aenean lacinia bibendum nulla sed consectetur.&lt;img src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_thumb.png&quot; alt=&quot;Your Alt Title&quot; title=&quot;Your Title&quot; width=&quot;150&quot; height=&quot;150&quot; class=&quot;alignleft size-thumbnail wp-image-28&quot; /&gt;Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Maecenas sed diam eget risus varius blandit sit amet non magna. Aenean lacinia bibendum nulla sed consectetur.&lt;img src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_thumb.png&quot; alt=&quot;Your Alt Title&quot; title=&quot;Your Title&quot; width=&quot;150&quot; height=&quot;150&quot; class=&quot;aligncenter size-thumbnail wp-image-28&quot; /&gt;Aenean lacinia bibendum nulla sed consectetur. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec ullamcorper nulla non metus auctor fringilla. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;
&lt;p&gt;And then... Finally, users can insert a WordPress [gallery], which is kinda ugly and comes with some CSS stuck into the page to style it (which doesn't actually validate, nor does the markup for the gallery). The amount of columns in the gallery is also changable by the user, but the default is three so we'll work with that for our example with an added fouth image to test verticle spacing.&lt;/p&gt;
&lt;style type=&quot;text/css&quot;&gt;#gallery-1{margin:auto;}#gallery-1 .gallery-item{float:left;margin-top:10px;text-align:center;width:33%;}#gallery-1 img{border:2px solid #cfcfcf;}#gallery-1 .gallery-caption{margin-left:0;}&lt;/style&gt;

&lt;div id=&quot;gallery-1&quot; class=&quot;gallery galleryid-1 gallery-columns-3 gallery-size-thumbnail&quot;&gt;&lt;dl class=&quot;gallery-item&quot;&gt;
&lt;dt class=&quot;gallery-icon&quot;&gt;
&lt;a href=&quot;#&quot; title=&quot;Your Title&quot;&gt;&lt;img width=&quot;150&quot; height=&quot;150&quot; src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_thumb.png&quot; class=&quot;attachment-thumbnail&quot; alt=&quot;Your Alt Title&quot; title=&quot;Your Title&quot; /&gt;&lt;/a&gt;
&lt;/dt&gt;&lt;/dl&gt;&lt;dl class=&quot;gallery-item&quot;&gt;
&lt;dt class=&quot;gallery-icon&quot;&gt;
&lt;a href=&quot;#&quot; title=&quot;Your Title&quot;&gt;&lt;img width=&quot;150&quot; height=&quot;150&quot; src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_thumb.png&quot; class=&quot;attachment-thumbnail&quot; alt=&quot;Your Alt Title&quot; title=&quot;Your Title&quot; /&gt;&lt;/a&gt;
&lt;/dt&gt;&lt;/dl&gt;&lt;dl class=&quot;gallery-item&quot;&gt;
&lt;dt class=&quot;gallery-icon&quot;&gt;
&lt;a href=&quot;#&quot; title=&quot;Your Title&quot;&gt;&lt;img width=&quot;150&quot; height=&quot;150&quot; src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_thumb.png&quot; class=&quot;attachment-thumbnail&quot; alt=&quot;Your Alt Title&quot; title=&quot;Your Title&quot; /&gt;&lt;/a&gt;
&lt;/dt&gt;&lt;/dl&gt;&lt;br style=&quot;clear: both&quot; /&gt;&lt;dl class=&quot;gallery-item&quot;&gt;
&lt;dt class=&quot;gallery-icon&quot;&gt;
&lt;a href=&quot;#&quot; title=&quot;Your Title&quot;&gt;&lt;img width=&quot;150&quot; height=&quot;150&quot; src=&quot;http://www.wpfill.me.s3-website-us-east-1.amazonaws.com/img/img_thumb.png&quot; class=&quot;attachment-thumbnail&quot; alt=&quot;Your Alt Title&quot; title=&quot;Your Title&quot; /&gt;&lt;/a&gt;
&lt;/dt&gt;&lt;/dl&gt;
&lt;br style=&quot;clear: both;&quot; /&gt;
&lt;/div&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Table Head Column One&lt;/th&gt;
&lt;th&gt;Table Head Column Two&lt;/th&gt;
&lt;th&gt;Table Head Column Three&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tfoot&gt;
&lt;tr&gt;
&lt;td&gt;Table Footer Column One&lt;/td&gt;
&lt;td&gt;Table Footer Column Two&lt;/td&gt;
&lt;td&gt;Table Footer Column Three&lt;/td&gt;
&lt;/tr&gt;
&lt;/tfoot&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Table Row Column One&lt;/td&gt;
&lt;td&gt;Short Text&lt;/td&gt;
&lt;td&gt;Testing a table cell with a longer amount of text to see what happens, you're not using tables for site layouts are you?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Table Row Column One&lt;/td&gt;
&lt;td&gt;Table Row Column Two&lt;/td&gt;
&lt;td&gt;Table Row Column Three&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Table Row Column One&lt;/td&gt;
&lt;td&gt;Table Row Column Two&lt;/td&gt;
&lt;td&gt;Table Row Column Three&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Table Row Column One&lt;/td&gt;
&lt;td&gt;Table Row Column Two&lt;/td&gt;
&lt;td&gt;Table Row Column Three&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Table Row Column One&lt;/td&gt;
&lt;td&gt;Table Row Column Two&lt;/td&gt;
&lt;td&gt;Table Row Column Three&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
&lt;li&gt;Ordered list item one.&lt;/li&gt;
&lt;li&gt;Ordered list item two.&lt;/li&gt;
&lt;li&gt;Ordered list item three.&lt;/li&gt;
&lt;li&gt;Ordered list item four.&lt;/li&gt;
&lt;li&gt;By the way, Wordpress does not let you create nested lists through the visual editor.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Unordered list item one.&lt;/li&gt;
&lt;li&gt;Unordered list item two.&lt;/li&gt;
&lt;li&gt;Unordered list item three.&lt;/li&gt;
&lt;li&gt;Unordered list item four.&lt;/li&gt;
&lt;li&gt;By the way, Wordpress does not let you create nested lists through the visual editor.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
Currently WordPress blockquotes are just wrapped in blockquote tags and have no clear way for the user to define a source. Maybe one day they'll be more semantic (and easier to style) like the version below.
&lt;/blockquote&gt;
&lt;blockquote cite=&quot;http://html5doctor.com/blockquote-q-cite/&quot;&gt;
&lt;p&gt;HTML5 comes to our rescue with the footer element, allowing us to add semantically separate information about the quote.&lt;/p&gt;
&lt;footer&gt;
&lt;cite&gt;
&lt;a href=&quot;http://html5doctor.com/blockquote-q-cite/&quot;&gt;Oli Studholme, HTML5doctor.com&lt;/a&gt;
&lt;/cite&gt;
&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h1&gt;Level One Heading&lt;/h1&gt;
&lt;h2&gt;Level Two Heading&lt;/h2&gt;
&lt;h3&gt;Level Three Heading&lt;/h3&gt;
&lt;h4&gt;Level Four Heading&lt;/h4&gt;
&lt;h5&gt;Level Five Heading&lt;/h5&gt;
&lt;h6&gt;Level Six Heading&lt;/h6&gt;

&lt;p&gt;This is a standard paragraph created using the WordPress TinyMCE text editor. It has a &lt;strong&gt;strong tag&lt;/strong&gt;, an &lt;em&gt;em tag&lt;/em&gt; and a &lt;del&gt;strikethrough&lt;/del&gt; which is actually just the del element. There are a few more inline elements which are not in the WordPress admin but we should check for incase your users get busy with the copy and paste. These include &lt;cite&gt;citations&lt;/cite&gt;, &lt;abbr title=&quot;abbreviation&quot;&gt;abbr&lt;/abbr&gt;, bits of &lt;code&gt;code&lt;/code&gt; and &lt;var&gt;variables&lt;/var&gt;, &lt;q&gt;inline quotations&lt;/q&gt;, &lt;ins datetime=&quot;2011-12-08T20:19:53+00:00&quot;&gt;inserted text&lt;/ins&gt;, text that is &lt;s&gt;no longer accurate&lt;/s&gt; or something &lt;mark&gt;so important&lt;/mark&gt; you might want to mark it. We can also style subscript and superscript characters like C0&lt;sub&gt;2&lt;/sub&gt;, here is our 2&lt;sup&gt;nd&lt;/sup&gt; example. If they are feeling non-semantic they might even use &lt;b&gt;bold&lt;/b&gt;, &lt;i&gt;italic&lt;/i&gt;, &lt;big&gt;big&lt;/big&gt; or &lt;small&gt;small&lt;/small&gt; elements too.&amp;nbsp;Incidentally, these HTML4.01 tags have been given new life and semantic meaning in HTML5, you may be interested in reading this &lt;a title=&quot;HTML5 Semantics&quot; href=&quot;http://csswizardry.com/2011/01/html5-and-text-level-semantics&quot;&gt;article by Harry Roberts&lt;/a&gt; which gives a nice excuse to test a link.&amp;nbsp;&amp;nbsp;It is also worth noting in the &quot;kitchen sink&quot; view you can also add &lt;span style=&quot;text-decoration: underline;&quot;&gt;underline&lt;/span&gt;&amp;nbsp;styling and set &lt;span style=&quot;color: #ff0000;&quot;&gt;text color&lt;/span&gt; with pesky inline CSS.&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;Additionally, WordPress also sets text alignment with inline styles, like this left aligned paragraph.&amp;nbsp;Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;
&lt;p style=&quot;text-align: right;&quot;&gt;This is a right aligned paragraph.&amp;nbsp;Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;This is a justified paragraph.&amp;nbsp;Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;Finally, you also have the option of an indented paragraph.&amp;nbsp;Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;
&lt;p&gt;And last, and by no means least, users can also apply the &lt;code&gt;Address&lt;/code&gt; tag to text like this:&lt;/p&gt;
&lt;address&gt;123 Example Street,
Testville,
West Madeupsburg,
CSSland,
1234&lt;/address&gt;
&lt;p&gt;...so there you have it, all our text elements&lt;/p&gt;
</description>
        <pubDate>Sat, 16 May 2015 02:44:35 +0800</pubDate>
        <link>http://liuwei.co/2015/more-random-text</link>
        <guid isPermaLink="true">http://liuwei.co/2015/more-random-text</guid>
        
        
        <category>random</category>
        
        <category>text</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory - edit this post and re-build (or run with the &lt;code class=&quot;highlighter-rouge&quot;&gt;-w&lt;/code&gt; switch) to see your changes!
To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 16 May 2014 02:44:35 +0800</pubDate>
        <link>http://liuwei.co/2014/welcome-to-jekyll</link>
        <guid isPermaLink="true">http://liuwei.co/2014/welcome-to-jekyll</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>HTML</title>
        <description>&lt;div class=&quot;entry-content&quot;&gt;
		&lt;p&gt;What HTML tags would you like to see?&lt;/p&gt;
&lt;p&gt;Let’s start with an unordered list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One&lt;/li&gt;
&lt;li&gt;Two&lt;/li&gt;
&lt;li&gt;Three&lt;/li&gt;
&lt;li&gt;Four&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And then move on to a more interesting ordered list:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;one, two
&lt;ol&gt;
&lt;li&gt;buckle my shoe&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;three, four
&lt;ol&gt;
&lt;li&gt;knock at the door&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Five, six
&lt;ol&gt;
&lt;li&gt;pick up sticks&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Seven, eight, lay them straight
&lt;ol&gt;
&lt;li&gt;Nine, ten, a big fat hen&lt;/li&gt;
&lt;li&gt;Eleven, twelve, dig and delve&lt;/li&gt;
&lt;li&gt;Thirteen, fourteen, maids a’courting&lt;/li&gt;
&lt;li&gt;Fifteen, sixteen, maids in the kitchen&lt;/li&gt;
&lt;li&gt;Seventeen, eighteen, maids a’waiting&lt;/li&gt;
&lt;li&gt;Nineteen, twenty, my platter’s empty …&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
	&lt;/div&gt;
</description>
        <pubDate>Fri, 02 May 2014 04:46:47 +0800</pubDate>
        <link>http://liuwei.co/2014/html</link>
        <guid isPermaLink="true">http://liuwei.co/2014/html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Elements</title>
        <description>&lt;div class=&quot;entry-content&quot;&gt;
		&lt;p&gt;&lt;!-- Sample Content to Plugin to Template --&gt;&lt;/p&gt;
&lt;p&gt;The purpose of this HTML is to help determine what default settings are with CSS and to make sure that all possible HTML Elements are included in this HTML so as to not miss any possible Elements when designing a site.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;Heading 1&lt;/h1&gt;
&lt;h2&gt;Heading 2&lt;/h2&gt;
&lt;h3&gt;Heading 3&lt;/h3&gt;
&lt;h4&gt;Heading 4&lt;/h4&gt;
&lt;h5&gt;Heading 5&lt;/h5&gt;
&lt;h6&gt;Heading 6&lt;/h6&gt;
&lt;p&gt;&lt;small&gt;&lt;a href=&quot;#wrapper&quot;&gt;[top]&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;paragraph&quot;&gt;Paragraph&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, &lt;a href=&quot;#&quot; title=&quot;test link&quot;&gt;test link&lt;/a&gt; adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. Donec faucibus. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.&lt;/p&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, &lt;em&gt;emphasis&lt;/em&gt; consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. Donec faucibus. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href=&quot;#wrapper&quot;&gt;[top]&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;list_types&quot;&gt;List Types&lt;/h2&gt;
&lt;h3&gt;Definition List&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Definition List Title&lt;/dt&gt;
&lt;dd&gt;This is a definition list division.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3&gt;Ordered List&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;List Item 1&lt;/li&gt;
&lt;li&gt;List Item 2&lt;/li&gt;
&lt;li&gt;List Item 3&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Unordered List&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;List Item 1&lt;/li&gt;
&lt;li&gt;List Item 2&lt;/li&gt;
&lt;li&gt;List Item 3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;small&gt;&lt;a href=&quot;#wrapper&quot;&gt;[top]&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;form_elements&quot;&gt;Forms&lt;/h2&gt;
&lt;fieldset&gt;
&lt;legend&gt;Legend&lt;/legend&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. Donec faucibus. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus.&lt;/p&gt;
&lt;form&gt;
&lt;h2&gt;Form Element&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. Donec faucibus. Nunc iaculis suscipit dui.&lt;/p&gt;
&lt;p&gt;&lt;label for=&quot;text_field&quot;&gt;Text Field:&lt;/label&gt;&lt;br /&gt;
		&lt;input id=&quot;text_field&quot; type=&quot;text&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;label for=&quot;text_area&quot;&gt;Text Area:&lt;/label&gt;&lt;br /&gt;
		&lt;textarea id=&quot;text_area&quot;&gt;&lt;/textarea&gt;&lt;/p&gt;
&lt;p&gt;&lt;label for=&quot;select_element&quot;&gt;Select Element:&lt;/label&gt;&lt;br /&gt;
			&lt;select name=&quot;select_element&quot;&gt;
			&lt;optgroup label=&quot;Option Group 1&quot;&gt;
				&lt;option value=&quot;1&quot;&gt;Option 1&lt;/option&gt;
				&lt;option value=&quot;2&quot;&gt;Option 2&lt;/option&gt;
				&lt;option value=&quot;3&quot;&gt;Option 3&lt;/option&gt;
			&lt;/optgroup&gt;
			&lt;optgroup label=&quot;Option Group 2&quot;&gt;
				&lt;option value=&quot;1&quot;&gt;Option 1&lt;/option&gt;
				&lt;option value=&quot;2&quot;&gt;Option 2&lt;/option&gt;
				&lt;option value=&quot;3&quot;&gt;Option 3&lt;/option&gt;
			&lt;/optgroup&gt;
		&lt;/select&gt;&lt;/p&gt;
&lt;p&gt;&lt;label for=&quot;radio_buttons&quot;&gt;Radio Buttons:&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;			&lt;input class=&quot;radio&quot; name=&quot;radio_button&quot; value=&quot;radio_1&quot; type=&quot;radio&quot; /&gt; Radio 1&lt;br /&gt;&lt;br /&gt;
				&lt;input class=&quot;radio&quot; name=&quot;radio_button&quot; value=&quot;radio_2&quot; type=&quot;radio&quot; /&gt; Radio 2&lt;br /&gt;&lt;br /&gt;
				&lt;input class=&quot;radio&quot; name=&quot;radio_button&quot; value=&quot;radio_3&quot; type=&quot;radio&quot; /&gt; Radio 3&lt;br /&gt;
		&lt;/p&gt;
&lt;p&gt;&lt;label for=&quot;checkboxes&quot;&gt;Checkboxes:&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;			&lt;input class=&quot;checkbox&quot; name=&quot;checkboxes&quot; value=&quot;check_1&quot; type=&quot;checkbox&quot; /&gt; Radio 1&lt;br /&gt;&lt;br /&gt;
				&lt;input class=&quot;checkbox&quot; name=&quot;checkboxes&quot; value=&quot;check_2&quot; type=&quot;checkbox&quot; /&gt; Radio 2&lt;br /&gt;&lt;br /&gt;
				&lt;input class=&quot;checkbox&quot; name=&quot;checkboxes&quot; value=&quot;check_3&quot; type=&quot;checkbox&quot; /&gt; Radio 3&lt;br /&gt;
		&lt;/p&gt;
&lt;p&gt;&lt;label for=&quot;password&quot;&gt;Password:&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;			&lt;input class=&quot;password&quot; name=&quot;password&quot; type=&quot;password&quot; /&gt;
		&lt;/p&gt;
&lt;p&gt;&lt;label for=&quot;file&quot;&gt;File Input:&lt;/label&gt;&lt;br /&gt;
			&lt;input class=&quot;file&quot; name=&quot;file&quot; type=&quot;file&quot; /&gt;
		&lt;/p&gt;
&lt;p&gt;&lt;input class=&quot;button&quot; value=&quot;Clear&quot; type=&quot;reset&quot; /&gt; &lt;input class=&quot;button&quot; value=&quot;Submit&quot; type=&quot;submit&quot; /&gt;
		&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/form&gt;
&lt;/fieldset&gt;
&lt;p&gt;&lt;small&gt;&lt;a href=&quot;#wrapper&quot;&gt;[top]&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;tables&quot;&gt;Tables&lt;/h2&gt;
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;th&gt;Table Header 1&lt;/th&gt;
&lt;th&gt;Table Header 2&lt;/th&gt;
&lt;th&gt;Table Header 3&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Division 1&lt;/td&gt;
&lt;td&gt;Division 2&lt;/td&gt;
&lt;td&gt;Division 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;Division 1&lt;/td&gt;
&lt;td&gt;Division 2&lt;/td&gt;
&lt;td&gt;Division 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Division 1&lt;/td&gt;
&lt;td&gt;Division 2&lt;/td&gt;
&lt;td&gt;Division 3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;small&gt;&lt;a href=&quot;#wrapper&quot;&gt;[top]&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;misc&quot;&gt;Misc Stuff – abbr, acronym, pre, code, sub, sup, etc.&lt;/h2&gt;
&lt;p&gt;Lorem &lt;sup&gt;superscript&lt;/sup&gt; dolor &lt;sub&gt;subscript&lt;/sub&gt; amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. &lt;cite&gt;cite&lt;/cite&gt;. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. &lt;acronym title=&quot;National Basketball Association&quot;&gt;NBA&lt;/acronym&gt; Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  &lt;abbr title=&quot;Avenue&quot;&gt;AVE&lt;/abbr&gt;&lt;/p&gt;
&lt;pre&gt;&lt;p&gt;
Lorem ipsum dolor sit amet,
 consectetuer adipiscing elit.
 Nullam dignissim convallis est.
 Quisque aliquam. Donec faucibus.
Nunc iaculis suscipit dui.
Nam sit amet sem.
Aliquam libero nisi, imperdiet at,
 tincidunt nec, gravida vehicula,
 nisl.
Praesent mattis, massa quis
luctus fermentum, turpis mi
volutpat justo, eu volutpat
enim diam eget metus.
Maecenas ornare tortor.
Donec sed tellus eget sapien
 fringilla nonummy.
&lt;acronym title=&quot;National Basketball Association&quot;&gt;NBA&lt;/acronym&gt;
Mauris a ante. Suspendisse
 quam sem, consequat at,
commodo vitae, feugiat in,
nunc. Morbi imperdiet augue
 quis tellus.  
&lt;abbr title=&quot;Avenue&quot;&gt;AVE&lt;/abbr&gt;&lt;/p&gt;&lt;/pre&gt;
&lt;blockquote&gt;&lt;p&gt;
	“This stylesheet is going to help so freaking much.” &lt;br /&gt;-Blockquote
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;small&gt;&lt;a href=&quot;#wrapper&quot;&gt;[top]&lt;/a&gt;&lt;/small&gt;&lt;br /&gt;
&lt;!-- End of Sample Content --&gt;&lt;/p&gt;
	&lt;/div&gt;
</description>
        <pubDate>Fri, 02 May 2014 04:46:47 +0800</pubDate>
        <link>http://liuwei.co/2014/elements</link>
        <guid isPermaLink="true">http://liuwei.co/2014/elements</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
